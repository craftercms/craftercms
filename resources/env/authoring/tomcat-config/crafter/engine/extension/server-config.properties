# Content root folder. The {siteName} variable will be automatically replaced.
crafter.engine.site.default.rootFolder.path=file:${CRAFTER_DATA_DIR}/repos/sites/{siteName}/sandbox/
# The URL of Crafter Search
crafter.engine.search.server.url=${SEARCH_URL}
# The URL of Crafter Profile
crafter.profile.rest.client.url.base=${PROFILE_URL}
# If the Security Provider is enabled
crafter.security.enabled=true
# The Elasticsearch hosts to use
crafter.engine.elasticsearch.urls=${ES_URL}
# The username for Elasticsearch
crafter.engine.elasticsearch.username=${ES_USERNAME}
# The password for Elasticsearch
crafter.engine.elasticsearch.password=${ES_PASSWORD}
# The connection timeout in milliseconds, if set to -1 the default will be used
crafter.engine.elasticsearch.timeout.connect=-1
# The socket timeout in milliseconds, if set to -1 the default will be used
crafter.engine.elasticsearch.timeout.socket=-1
# The number of threads to use, if set to -1 the default will be used
crafter.engine.elasticsearch.threads=-1
# Indicates if keep alive should be enabled for sockets used by the search client, defaults to false
crafter.engine.elasticsearch.keepAlive=false

# Engine management authorization token
crafter.engine.management.authorizationToken=${ENGINE_MANAGEMENT_TOKEN}

# The key used for encryption of configuration properties
crafter.security.encryption.key=${CRAFTER_ENCRYPTION_KEY}
# The salt used for encryption of configuration properties
crafter.security.encryption.salt=${CRAFTER_ENCRYPTION_SALT}

# The prefix used for all header names
crafter.security.header.names.prefix=CRAFTER_
# The name of the header containing the username
crafter.security.header.names.username=username
# The name of the header containing the email
crafter.security.header.names.email=email
# The name of the header containing the groups
crafter.security.header.names.groups=groups
# The name of the header containing the token
crafter.security.header.names.token=secure_key

# The current environment the Engine instance is running in (e.g. default, dev, qa, prod)
crafter.engine.environment=${CRAFTER_ENVIRONMENT}

# Indicates if Forwarded or X-Forwarded headers should be used when resolving the client-originated protocol and
# address. Enable when Engine is behind a reverse proxy or load balancer that sends these
crafter.engine.forwarded.headers.enabled=false

# Indicates if the 'etag' header should be added
crafter.engine.header.etag.enable=true
# Indicates the urls that will have the 'etag' header (comma separated ant matchers)
crafter.engine.header.etag.include.urls=/**
