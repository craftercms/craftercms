##################################################
##              Content Repository              ##
##################################################
# Absolute path to repository base (all actual repositories will be under this)
studio.repo.basePath: ${sys:crafter.data.dir}/repos
# Sandbox git repository branch for every site
# studio.repo.siteSandboxBranch: master
# If not using environment-config.xml, environments are configured here
# Git repository branch for the `live` environment, default "live"
# studio.repo.published.live: live
# Git repository branch for the `staging` environment, default "staging"
# studio.repo.published.staging: staging

############################################################
##                    Preview Deployer                    ##
############################################################

# Default preview deployer URL (can be overridden per site)
studio.preview.defaultPreviewDeployerUrl: http://localhost:@DEPLOYER_PORT@/api/1/target/deploy/preview/{siteName}
# Default preview create target URL (can be overridden per site)
studio.preview.createTargetUrl: http://localhost:@DEPLOYER_PORT@/api/1/target/create
# Default preview create target URL (can be overridden per site)
studio.preview.deleteTargetUrl: http://localhost:@DEPLOYER_PORT@/api/1/target/delete/{siteEnv}/{siteName}
# URL to the preview Crafter Engine
studio.preview.engineUrl: http://localhost:@TOMCAT_HTTP_PORT@
# URL to the preview repository (aka Sandbox) where authors save work-in-progress
studio.preview.repoUrl: ${sys:crafter.data.dir}/repos/sites/{siteName}/sandbox

############################################################
##                   Preview Search                       ##
############################################################

studio.preview.search.createUrl: http://localhost:@TOMCAT_HTTP_PORT@/crafter-search/api/2/admin/index/create
studio.preview.search.deleteUrl: http://localhost:@TOMCAT_HTTP_PORT@/crafter-search/api/2/admin/index/delete/{siteName}

##################################################
##                   Database                   ##
##################################################

# Format:
# jdbc:DATABASE_PLATFORM;databaseName=DATABASE_NAME;create=true;user=DATABASE_USERNAME;password=DATABASE_USER_PASSWORD
# Note that a relative path is not suitable for a production deployment
studio.db.url: jdbc:mariadb://127.0.0.1:@MARIADB_PORT@/crafter?user=crafter&password=crafter

# Connection string used to initialize database
studio.db.initializer.url: jdbc:mariadb://127.0.0.1:@MARIADB_PORT@?user=root&password=
# Port number for the embedded database (note this must match what's in the connection URLs in this config file)
studio.db.port: @MARIADB_PORT@
# Data folder for the embedded database
studio.db.dataPath: ${sys:crafter.data.dir}/db
# Socket path for the embedded database
studio.db.socket: /tmp/MariaDB4j.@MARIADB_PORT@.sock

##################################################
##                   Security                   ##
##################################################
# Enable random admin password generation
# studio.db.initializer.randomAdminPassword.enabled: false
# Random admin password length
# studio.db.initializer.randomAdminPassword.length: 16
# Random admin password allowed chars
# studio.db.initializer.randomAdminPassword.chars: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*_=+-/

# Defines security provider for accessing repository. Possible values
# - db (users are stored in database)
# - ldap (users are imported from LDAP into the database)
# - headers (use when authenticating via headers)
# studio.security.type: ldap
#
# Salt for encrypting
# studio.security.cipher.salt: TDEsDF8vx3gV4c7G
# Key for encrypting
# studio.security.cipher.key: AoCcBdnsTa9R3DdG

# LDAP Server url
# studio.security.ldap.serverUrl: ldap://localhost:389
# LDAP bind DN (user)
# studio.security.ldap.bindDN: cn=Manager,dc=my-domain,dc=com
# LDAP bind password
# studio.security.ldap.bindPassword: secret
# LDAP base context (directory root)
# studio.security.ldap.baseContext: dc=my-domain,dc=com
# LDAP username attribute
# studio.security.ldap.userAttribute.username: uid
# LDAP first name attribute
# studio.security.ldap.userAttribute.firstName: cn
# LDAP last name attribute
# studio.security.ldap.userAttribute.lastName: sn
# LDAP email attribute
# studio.security.ldap.userAttribute.email: mail
# LDAP site ID attribute
# studio.security.ldap.userAttribute.siteId: crafterSite
# LDAP site ID attribute name regex
# studio.security.ldap.userAttribute.siteId.regex: .*
# LDAP site ID attribute match index
# studio.security.ldap.userAttribute.siteId.matchIndex: 0
# LDAP group name match index for the site ID attribute
# studio.security.ldap.userAttribute.siteId.groupName.matchIndex: 1
# LDAP groups attribute
# studio.security.ldap.userAttribute.groupName: crafterGroup
# LDAP groups attribute name regex
# studio.security.ldap.userAttribute.groupName.regex: .*
# LDAP groups attribute match index
# studio.security.ldap.userAttribute.groupName.matchIndex: 1
# LDAP default site if site ID attribute not found
# studio.security.ldap.defaultSiteId: default

# Authentication via headers enabled
# studio.authentication.headers.enabled: false
# Authentication header for secure key
# studio.authentication.headers.secureKeyHeaderName: secure_key
# Authentication headers secure key that is expected to match secure key value from headers
# Typically this is placed in the header by the authentication agent, e.g. Apache mod_mellon
# studio.authentication.headers.secureKeyHeaderValue: secure
# Authentication header for username
# studio.authentication.headers.username: username
# Authentication header for first name
# studio.authentication.headers.firstName: firstname
# Authentication header for last name
# studio.authentication.headers.lastName: lastname
# Authentication header for email
# studio.authentication.headers.email: email
# Authentication header for groups: comma separated list of sites and groups
#   Example:
#   craftercms1645,Author,anothersite,Author
# studio.authentication.headers.groups: groups

##################################################
##        SMTP Configuration (Email)            ##
##################################################

# Default value for from header when sending emails.
# studio.mail.from.default: admin@example.com
# SMTP server name to send emails.
# studio.mail.host: localhost
# SMTP port number to send emails.
studio.mail.port: @SMTP_PORT@
# SMTP username for authenticated access when sending emails.
# studio.mail.username:
# SMTP password for authenticated access when sending emails.
# studio.mail.password:
# Turn on/off (value true/false) SMTP authenaticated access protocol.
# studio.mail.smtp.auth: false
# Enable/disable (value true/false) SMTP TLS protocol when sending emails.
# studio.mail.smtp.starttls.enable: false
# Enable/disable (value true/false) SMTP EHLO protocol when sending emails.
# studio.mail.smtp.ehlo: true
# Enable/disable (value true/false) debug mode for email service. Enabling debug mode allows tracking/debugging communication between email service and SMTP server.
# studio.mail.debug: false

################################################################
##                             CORS                           ##
################################################################
# This is configured as permissive by default for ease of deployment
# Remember to tighten this up for production

# Disable CORS headers completely
# studio.cors.disable: false
# Value for the Access-Control-Allow-Origin header
# studio.cors.origins: '*'
# Value for the Access-Control-Allow-Headers header
# studio.cors.headers: '*'
# Value for the Access-Control-Allow-Methods header
# studio.cors.methods: '*'
# Value for the Access-Control-Allow-Credentials header
# studio.cors.credentials: true
# Value for the Access-Control-Max-Age header
# studio.cors.maxage: -1
